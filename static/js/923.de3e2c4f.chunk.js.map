{"version":3,"file":"static/js/923.de3e2c4f.chunk.js","mappings":"sSAEMA,E,MAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CAAEC,QAAS,sCAGRC,EAAa,mCAAG,sGACJL,EAASM,IAAI,oBAAqB,CACvDH,OAAQ,CAAEI,KAAM,KAFS,uBACnBC,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASM,IAAI,eAAgB,CAClDH,OAAQ,CAAEO,MAAAA,KAFc,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAqB,mCAAG,WAAMC,GAAN,yFACZZ,EAASM,IAAT,gBAAsBM,IADV,uBAC3BJ,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBK,EAAc,mCAAG,WAAMD,GAAN,yFACLZ,EAASM,IAAT,gBAAsBM,EAAtB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRZ,EAASM,IAAT,gBAAsBM,EAAtB,aADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD,4EC5B9B,SAASO,EAAT,GAAmC,IAC3BC,EAD0B,EAARR,KACFS,KAAI,SAAAC,GAAC,OACzB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEN,IAAvB,SAA8BM,EAAEE,OAASF,EAAEG,QADpCH,EAAEN,GADc,IAK3B,OAAO,wBAAKI,GACb,CAED,QAEAD,EAAeO,aAAe,CAC5Bd,KAAM,G,+ICUR,MAtBA,YAAqC,IAAfe,EAAc,EAAdA,WACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KAQA,OACE,kBAAMC,SANa,SAAAR,GACnBA,EAAES,iBACFJ,EAAW,CAAEb,MAAAA,IACbe,EAAS,GACV,EAEC,WACE,kBACEG,MAAOlB,EACPmB,KAAK,OACLC,SAXe,SAAAZ,GAAC,OAAIO,EAASP,EAAEa,OAAOH,MAAtB,EAYhBI,YAAY,sBAEd,mBAAQH,KAAK,SAAb,sBAGL,E,kBCiCD,MAlDA,WACE,OAA0BL,EAAAA,EAAAA,UAAS,CACjChB,KAAM,GACNyB,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM7B,EAAQ4B,EAAahC,IAAI,SAkC/B,OA5BAkC,EAAAA,EAAAA,YAAU,WACRJ,GAAS,SAAAK,GAAI,yBACRA,GADQ,IAEXR,SAAS,GAFE,IAKb,IAAMS,EAAW,mCAAG,8GAEGjC,EAAAA,EAAAA,IAAaC,GAFhB,OAEVF,EAFU,OAIhB4B,GAAS,SAAAK,GAAI,yBACRA,GADQ,IAEXR,SAAS,EACTzB,KAAMA,EAAKmC,SAHA,IAJG,gDAUhBP,GAAS,SAAAK,GAAI,yBACRA,GADQ,IAEXR,SAAS,EACTC,MAAO,KAAMU,SAHF,IAVG,yDAAH,qDAiBblC,GACFgC,GAEH,GAAE,CAAChC,KAGF,4BACE,SAAC,EAAD,CAAYa,WAlCC,SAAAsB,GACfN,EAAgBM,EACjB,KAiCG,SAAC9B,EAAA,EAAD,CAAgBP,KAAM2B,EAAM3B,SAGjC,C","sources":["api.js","components/MovieListItems/MovieListItems.jsx","components/SearchForm/SearchForm.jsx","pages/SearchPage/SearchPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b01160fe65872b7102c85dbc7141a795' },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await instance.get('trending/all/week', {\n    params: { page: 1 },\n  });\n  return data;\n};\n\nexport const fetchByQuery = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchMovieDetailsById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n\n// export default instance;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MovieListItems({ data }) {\n  const elements = data.map(e => (\n    <li key={e.id}>\n      <Link to={`/movies/${e.id}`}>{e.title || e.name}</Link>\n    </li>\n  ));\n  return <ul>{elements}</ul>;\n}\n\nexport default MovieListItems;\n\nMovieListItems.dafaultProps = {\n  data: [],\n};\n\nMovieListItems.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SearchForm({ formSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => setQuery(e.target.value);\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmit({ query });\n    setQuery('');\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={query}\n        type=\"text\"\n        onChange={handleChange}\n        placeholder=\"Enter Movie Name\"\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  formSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm';\nimport { fetchByQuery } from 'api';\nimport MovieListItems from 'components/MovieListItems';\n\nfunction SearchPage() {\n  const [state, setState] = useState({\n    data: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const onSubmit = q => {\n    setSearchParams(q);\n  };\n\n  useEffect(() => {\n    setState(prev => ({\n      ...prev,\n      loading: true,\n    }));\n\n    const fetchMovies = async () => {\n      try {\n        const data = await fetchByQuery(query);\n\n        setState(prev => ({\n          ...prev,\n          loading: false,\n          data: data.results,\n        }));\n      } catch (error) {\n        setState(prev => ({\n          ...prev,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    if (query) {\n      fetchMovies();\n    }\n  }, [query]);\n\n  return (\n    <div>\n      <SearchForm formSubmit={onSubmit} />\n      <MovieListItems data={state.data} />\n    </div>\n  );\n}\n\nexport default SearchPage;\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrending","get","page","data","fetchByQuery","query","fetchMovieDetailsById","id","fetchMovieCast","fetchMovieReviews","MovieListItems","elements","map","e","to","title","name","dafaultProps","formSubmit","useState","setQuery","onSubmit","preventDefault","value","type","onChange","target","placeholder","loading","error","state","setState","useSearchParams","searchParams","setSearchParams","useEffect","prev","fetchMovies","results","message","q"],"sourceRoot":""}