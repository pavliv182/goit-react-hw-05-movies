{"version":3,"file":"static/js/27.fa862c59.chunk.js","mappings":"qSAEMA,E,MAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CAAEC,QAAS,sCAGRC,EAAa,mCAAG,sGACJL,EAASM,IAAI,oBAAqB,CACvDH,OAAQ,CAAEI,KAAM,KAFS,uBACnBC,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASM,IAAI,eAAgB,CAClDH,OAAQ,CAAEO,MAAAA,KAFc,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAqB,mCAAG,WAAMC,GAAN,yFACZZ,EAASM,IAAT,gBAAsBM,IADV,uBAC3BJ,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBK,EAAc,mCAAG,WAAMD,GAAN,yFACLZ,EAASM,IAAT,gBAAsBM,EAAtB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRZ,EAASM,IAAT,gBAAsBM,EAAtB,aADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD,8IC9B9B,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA2F,4B,SCE3F,SAASO,EAAT,GAAgC,IACxBC,EADuB,EAARR,KACCS,KAAI,SAAAC,GAAC,OACzB,gBAAIC,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,qBAAoCF,EAAEG,WACtC,uBAAIH,EAAEI,YAFsBJ,EAAEN,GADP,IAM3B,OAAO,eAAIO,UAAWC,EAAf,SAA0BJ,GAClC,CAED,QAEAD,EAAYQ,aAAe,CACzBf,KAAM,IC0CR,MApDA,WACE,OAAwBgB,EAAAA,EAAAA,UAAS,CAC/BC,QAAS,GACTC,SAAS,EACTC,MAAO,OAHT,eAAOnB,EAAP,KAAaoB,EAAb,KAMQhB,GAAOiB,EAAAA,EAAAA,MAAPjB,IAERkB,EAAAA,EAAAA,YAAU,WACRF,GAAQ,SAAAG,GAAI,yBACPA,GADO,IAEVL,SAAS,GAFC,IAKZ,IAAMM,EAAY,mCAAG,8GAEElB,EAAAA,EAAAA,IAAkBF,GAFpB,OAEXJ,EAFW,OAKjBoB,GAAQ,SAAAG,GAAI,yBACPA,GADO,IAEVL,SAAS,EACTD,QAASjB,EAAKyB,SAHJ,IALK,gDAWjBL,GAAQ,SAAAG,GAAI,yBACPA,GADO,IAEVL,SAAS,EACTC,MAAO,KAAMO,SAHH,IAXK,yDAAH,qDAkBlBF,GACD,GAAE,CAACpB,IAEJ,IAAQc,EAA4BlB,EAA5BkB,QAASC,EAAmBnB,EAAnBmB,MAAOF,EAAYjB,EAAZiB,QAGxB,OACE,gCACGC,IAAW,sCACXD,EAAQU,QACP,SAAC,EAAD,CAAa3B,KAAMiB,KAEnB,oEAEDE,IAAS,uBAAIA,MAGnB,C","sources":["api.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/ReviewsItem/reviewsItem.module.css?6099","components/Reviews/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b01160fe65872b7102c85dbc7141a795' },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await instance.get('trending/all/week', {\n    params: { page: 1 },\n  });\n  return data;\n};\n\nexport const fetchByQuery = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchMovieDetailsById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n\n// export default instance;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviewsItem_list__6uUMa\",\"item\":\"reviewsItem_item__H92z3\",\"author\":\"reviewsItem_author__Nw6Zc\"};","import css from './reviewsItem.module.css';\nimport PropTypes from 'prop-types';\n\nfunction ReviewsItem({ data }) {\n  const elements = data.map(e => (\n    <li className={css.item} key={e.id}>\n      <h3 className={css.author}>Author: {e.author}</h3>\n      <p>{e.content}</p>\n    </li>\n  ));\n  return <ul className={css.list}>{elements}</ul>;\n}\n\nexport default ReviewsItem;\n\nReviewsItem.dafaultProps = {\n  data: [],\n};\n\nReviewsItem.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'api.js';\n\nimport ReviewsItem from './ReviewsItem';\n\nfunction Reviews() {\n  const [data, setData] = useState({\n    reviews: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setData(prev => ({\n      ...prev,\n      loading: true,\n    }));\n\n    const fetchReviews = async () => {\n      try {\n        const data = await fetchMovieReviews(id);\n        // console.log(data);\n\n        setData(prev => ({\n          ...prev,\n          loading: false,\n          reviews: data.results,\n        }));\n      } catch (error) {\n        setData(prev => ({\n          ...prev,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  const { loading, error, reviews } = data;\n  // const { poster_path } = movies;\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      {reviews.length ? (\n        <ReviewsItem data={reviews} />\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      {error && <p>{error}</p>}\n    </>\n  );\n}\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrending","get","page","data","fetchByQuery","query","fetchMovieDetailsById","id","fetchMovieCast","fetchMovieReviews","ReviewsItem","elements","map","e","className","css","author","content","dafaultProps","useState","reviews","loading","error","setData","useParams","useEffect","prev","fetchReviews","results","message","length"],"sourceRoot":""}