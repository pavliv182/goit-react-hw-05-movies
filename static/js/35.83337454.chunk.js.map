{"version":3,"file":"static/js/35.83337454.chunk.js","mappings":"qSAEMA,E,MAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CAAEC,QAAS,sCAGRC,EAAa,mCAAG,sGACJL,EAASM,IAAI,oBAAqB,CACvDH,OAAQ,CAAEI,KAAM,KAFS,uBACnBC,EADmB,EACnBA,KADmB,kBAIpBA,GAJoB,2CAAH,qDAObC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASM,IAAI,eAAgB,CAClDH,OAAQ,CAAEO,MAAAA,KAFc,uBAClBF,EADkB,EAClBA,KADkB,kBAInBA,GAJmB,2CAAH,sDAOZG,EAAqB,mCAAG,WAAMC,GAAN,yFACZZ,EAASM,IAAT,gBAAsBM,IADV,uBAC3BJ,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBK,EAAc,mCAAG,WAAMD,GAAN,yFACLZ,EAASM,IAAT,gBAAsBM,EAAtB,aADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdM,EAAiB,mCAAG,WAAMF,GAAN,yFACRZ,EAASM,IAAT,gBAAsBM,EAAtB,aADQ,uBACvBJ,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD,4EC5B9B,SAASO,EAAT,GAA8B,IACtBC,EADqB,EAARR,KACGS,KAAI,SAAAC,GAAC,OACzB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAEN,IAAvB,SAA8BM,EAAEE,OAASF,EAAEG,QADpCH,EAAEN,GADc,IAK3B,OAAO,wBAAKI,GACb,CAED,QAEAD,EAAUO,aAAe,CACvBd,KAAM,G,uJCgCR,MA3CA,WACE,OAAwBe,EAAAA,EAAAA,UAAS,CAC/BC,OAAQ,GACRC,SAAS,EACTC,MAAO,OAHT,eAAOlB,EAAP,KAAamB,EAAb,MAKAC,EAAAA,EAAAA,YAAU,WACRD,GAAQ,SAAAE,GAAI,yBACPA,GADO,IAEVJ,SAAS,GAFC,IAKZ,IAAMK,EAAW,mCAAG,8GAEGzB,EAAAA,EAAAA,MAFH,OAEVG,EAFU,OAGhBmB,GAAQ,SAAAE,GAAI,yBACPA,GADO,IAEVJ,SAAS,EACTD,OAAQhB,EAAKuB,SAHH,IAHI,gDAShBJ,GAAQ,SAAAE,GAAI,yBACPA,GADO,IAEVJ,SAAS,EACTC,MAAO,KAAMM,SAHH,IATI,yDAAH,qDAgBjBF,GACD,GAAE,IAEH,IAAQL,EAA2BjB,EAA3BiB,QAASC,EAAkBlB,EAAlBkB,MAAOF,EAAWhB,EAAXgB,OAExB,OACE,4BACE,2CACCC,IAAW,uCACZ,SAACV,EAAA,EAAD,CAAWP,KAAMgB,IAChBE,IAAS,uBAAIA,MAGnB,C","sources":["api.js","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b01160fe65872b7102c85dbc7141a795' },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await instance.get('trending/all/week', {\n    params: { page: 1 },\n  });\n  return data;\n};\n\nexport const fetchByQuery = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchMovieDetailsById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n\n// export default instance;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MovieList({ data }) {\n  const elements = data.map(e => (\n    <li key={e.id}>\n      <Link to={`/movies/${e.id}`}>{e.title || e.name}</Link>\n    </li>\n  ));\n  return <ul>{elements}</ul>;\n}\n\nexport default MovieList;\n\nMovieList.dafaultProps = {\n  data: [],\n};\n\nMovieList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from 'api';\nimport MovieList from 'components/MovieList';\n\nfunction HomePage() {\n  const [data, setData] = useState({\n    movies: [],\n    loading: false,\n    error: null,\n  });\n  useEffect(() => {\n    setData(prev => ({\n      ...prev,\n      loading: true,\n    }));\n\n    const onFirstLoad = async () => {\n      try {\n        const data = await fetchTrending();\n        setData(prev => ({\n          ...prev,\n          loading: false,\n          movies: data.results,\n        }));\n      } catch (error) {\n        setData(prev => ({\n          ...prev,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    onFirstLoad();\n  }, []);\n\n  const { loading, error, movies } = data;\n\n  return (\n    <div>\n      <h1>Tranding Today</h1>\n      {loading && <p>...Loading</p>}\n      <MovieList data={movies} />\n      {error && <p>{error}</p>}\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrending","get","page","data","fetchByQuery","query","fetchMovieDetailsById","id","fetchMovieCast","fetchMovieReviews","MovieList","elements","map","e","to","title","name","dafaultProps","useState","movies","loading","error","setData","useEffect","prev","onFirstLoad","results","message"],"sourceRoot":""}