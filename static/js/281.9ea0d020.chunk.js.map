{"version":3,"file":"static/js/281.9ea0d020.chunk.js","mappings":"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","sources":["api.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/movieDetailsPage.module.css?c394","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: { api_key: 'b01160fe65872b7102c85dbc7141a795' },\n});\n\nexport const fetchTrending = async () => {\n  const { data } = await instance.get('trending/all/week', {\n    params: { page: 1 },\n  });\n  return data;\n};\n\nexport const fetchByQuery = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const fetchMovieDetailsById = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCast = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n\n// export default instance;\n","// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"movieDetailsPage_goBack__gAebg\",\"wrapper\":\"movieDetailsPage_wrapper__kmPut\",\"about\":\"movieDetailsPage_about__vqkbY\",\"score\":\"movieDetailsPage_score__MK4dr\",\"overview\":\"movieDetailsPage_overview__zF32t\",\"genresTitle\":\"movieDetailsPage_genresTitle__sJZRH\",\"genres\":\"movieDetailsPage_genres__LiaVf\",\"info\":\"movieDetailsPage_info__G9PsW\",\"links\":\"movieDetailsPage_links__AVOFn\",\"genresItem\":\"movieDetailsPage_genresItem__qaqEt\",\"link\":\"movieDetailsPage_link__ZHtlQ\"};","import { Link, Outlet, useParams, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieDetailsById } from 'api';\nimport css from './movieDetailsPage.module.css';\n\nfunction MovieDetailsPage() {\n  const [data, setData] = useState({\n    movies: [],\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n\n  const imgURL = 'https://image.tmdb.org/t/p/w500/';\n\n  const navigate = useNavigate();\n  // const location = useLocation();\n\n  const goBack = () => navigate('/movies');\n  // console.log(from);\n\n  useEffect(() => {\n    setData(prev => ({\n      ...prev,\n      loading: true,\n    }));\n\n    const fetchOneMovieDetails = async () => {\n      try {\n        const data = await fetchMovieDetailsById(id);\n        // console.log(data);\n        setData(prev => ({\n          ...prev,\n          loading: false,\n          movies: data,\n        }));\n      } catch (error) {\n        setData(prev => ({\n          ...prev,\n          loading: false,\n          error: error.message,\n        }));\n      }\n    };\n    fetchOneMovieDetails();\n  }, [id]);\n\n  const { loading, error, movies } = data;\n  const {\n    poster_path,\n    backdrop_path,\n    title,\n    name,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movies;\n\n  const normalizedDate = release_date?.slice(0, 4) || null;\n  const normalizedVoteAverage = (vote_average * 10).toFixed();\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      <button onClick={goBack} className={css.goBack} type=\"button\">\n        Go back\n      </button>\n      {!error && (\n        <>\n          <div className={css.wrapper}>\n            {poster_path ? (\n              <img\n                className={css.img}\n                src={imgURL + poster_path}\n                alt={title || name}\n              />\n            ) : (\n              <img\n                className={css.img}\n                src={imgURL + backdrop_path}\n                alt={title || name}\n              />\n            )}\n\n            <div className={css.about}>\n              <h2>\n                {title || name}({normalizedDate})\n              </h2>\n\n              <p className={css.score}>User score: {normalizedVoteAverage}%</p>\n              <h3>Overview</h3>\n              <p className={css.overview}>{overview}</p>\n              <h3 className={css.genresTitle}>Genres</h3>\n              <p>\n                {genres &&\n                  genres.map(e => (\n                    <span className={css.genresItem} key={e.id}>\n                      {e.name}\n                    </span>\n                  ))}\n              </p>\n            </div>\n          </div>\n          <div className={css.links}>\n            <h3 className={css.info}>Aditional information</h3>\n            <Link className={css.link} to={`/movies/${id}/cast`}>\n              Cast\n            </Link>\n            <Link className={css.link} to={`/movies/${id}/reviews`}>\n              Reviews\n            </Link>\n          </div>\n          <div>\n            <Outlet />\n          </div>\n        </>\n      )}\n      {error && <h1>No movie information</h1>}\n    </>\n  );\n}\n\nexport default MovieDetailsPage;\n"],"names":["instance","axios","baseURL","params","api_key","fetchTrending","get","page","data","fetchByQuery","query","fetchMovieDetailsById","id","fetchMovieCast","fetchMovieReviews","useState","movies","loading","error","setData","useParams","imgURL","navigate","useNavigate","useEffect","prev","fetchOneMovieDetails","message","poster_path","backdrop_path","title","name","release_date","vote_average","overview","genres","normalizedDate","slice","normalizedVoteAverage","toFixed","onClick","className","css","type","src","alt","map","e","to"],"sourceRoot":""}